using Microsoft.Xna.Framework;
using System;
using System.Collections.Generic;
using System.Text;

//----------------------------------------------------------------------------------
//----------------------------------------------------------------------------------
namespace GameEngine
{
	//----------------------------------------------------------------------------------
	//----------------------------------------------------------------------------------
	public class Camera : GameObject
	{
		private Matrix m_m44Projection;
		private Matrix m_m44View;

		private float m_fFOV = 60.0f;
		private float m_fAspectRatio = 1.777778f;
		private float m_fNearPlane = 0.1f;
		private float m_fFarPlane = 500.0f;

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public Camera()
		{
			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public Camera(float fFOV, float fAspectRatio, float fNearPlane, float fFarPlane)
		{
			m_fFOV = fFOV;
			m_fAspectRatio = fAspectRatio;
			m_fNearPlane = fNearPlane;
			m_fFarPlane = fFarPlane;

			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public void UpdateMatricies()
		{
			float fFOVRadians = MathHelper.ToRadians(m_fFOV);
			m_m44Projection = Matrix.CreatePerspectiveFieldOfView(fFOVRadians, m_fAspectRatio, m_fNearPlane, m_fFarPlane);

			Matrix transform = GetLocalMatrix();
			m_m44View = Matrix.Invert(transform);
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public float GetFOV()
		{
			return m_fFOV;
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public void SetFOV(float fFOV)
		{
			m_fFOV = fFOV;
			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public float GetAspectRatio()
		{
			return m_fAspectRatio;
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public void SetAspectRatio(float fAspectRatio)
		{
			m_fAspectRatio = fAspectRatio;
			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public float GetNearPlane()
		{
			return m_fNearPlane;
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public void SetNearPlane(float fNearPlane)
		{
			m_fNearPlane = fNearPlane;
			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public float GetFarPlane()
		{
			return m_fFarPlane;
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public void SetFarPlane(float fFarPlane)
		{
			m_fFarPlane = fFarPlane;
			UpdateMatricies();
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public Matrix GetViewMatrix()
		{
			return m_m44View;
		}

		//----------------------------------------------------------------------------------
		//----------------------------------------------------------------------------------
		public Matrix GetProjectionMatrix()
		{
			return m_m44Projection;
		}
	}
}
